baseAppConfiguration:
  name: flex-maestro
  role: flex-maestro

hostConfiguration:
  hostSid: ${HOST_SID}
  boxconfigPassword: NOTSET
  realm: ${TWILIO_REALM}
  environment: ${TWILIO_ENVIRONMENT}

server:
  maxThreads: 2048
  maxQueuedRequests: 2048
  minThreads: 32
  registerDefaultExceptionMappers: false
  idleThreadTimeout: 10s

# Json formatted Request Log https://www.dropwizard.io/2.2.0/docs/manual/configuration.html#man-configuration-logging
  requestLog:
    appenders:
    - type: console
      layout:
        type: access-json
        timestampFormat: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
        prettyPrint: false
        appendLineSeparator: true
        includes: [timestamp, remoteAddress, remoteUser, protocol, method, requestUri, statusCode, requestTime, contentLength, userAgent]
        requestHeaders:
          - I-Twilio-Request-Id
          - T-Request-Id
      threshold: ALL
      timeZone: UTC
      target: stdout

  applicationConnectors:
    - type: http
      port: ${APP_PORT}
      idleTimeout: 30s
      useForwardedHeaders: false
  adminConnectors:
    - type: http
      port: ${ADMIN_PORT}
      idleTimeout: 30s
      useForwardedHeaders: false

logging:
  level: INFO
  loggers:
    "shadedlogback.com.twilio.cartographer": WARN
    "com.twilio.cartographer": WARN
    "com.twilio.platform.metrics": WARN
    "org.apache.http.wire": WARN
    "org.eclipse.jetty.http.HttpParser": WARN
    "org.eclipse.jetty.io" : WARN
    "org.eclipse.jetty.server": WARN
    "org.eclipse.jetty.server.Server" : INFO
    "org.eclipse.jetty.server.ServerConnector" : INFO
    "org.eclipse.jetty.servlet" : WARN
    "org.eclipse.jetty.util" : WARN
    "org.eclipse.jetty.ContextHandler" : WARN
    "org.reflections": INFO
    "org.apache": WARN
    "com.twilio": WARN
    "com.twilio.healthcheck": WARN
    "org.asynchttpclient": WARN
    "com.twilio.dropwizard.exception.mappers" : INFO

  appenders:
  - type: console
    layout:
      type: json
      timestampFormat: "yyyy-MM-dd'T'HH:mm:ss.SSSZ"
      prettyPrint: false
      appendLineSeparator: true
      includes: [timestamp, threadName, level, loggerName, message, mdc, exception]
      includesMdcKeys: [request.sid]
    threshold: ALL
    timeZone: UTC
    target: stdout
    neverBlock: true

# Exception mappers for transforming Uncaught exceptions to TwilioServiceErrorResponse format
exceptionMapperConfiguration:
  responseFactory: com.twilio.core.jersey3.response.DefaultResponseFactory
  verbosity: EXTENDED
  mappers:
  - com.twilio.core.bundles.jakarta.exceptions.mappers.PublicJerseyViolationExceptionMapper
  - com.twilio.core.bundles.jakarta.exceptions.mappers.JsonProcessingExceptionMapper
  - com.twilio.core.bundles.jakarta.exceptions.mappers.DataStoreExceptionMapper
  configurableMapper:
    exceptionMap:
      java.lang.IllegalArgumentException:
        status: 400
        code: 1002
      com.twilio.sids.InvalidSidException:
        status: 400
        code: 1302
    codeMap:
      1305:
        status: 404
        code: 1305
      1308:
        status: 400
        code: 1308
      1601:
        status: 503
        code: 1601

rollbarConfiguration:
  enabled: ${ROLLBAR_ENABLED:-true}
  name: flex-maestro
  apiKey: @${SECRET_ROLLBAR_API_KEY}@
  environment: ${TWILIO_ENVIRONMENT}
  level: WARN

dataDogMetricsConfiguration:
    apiKey: @${SECRET_DATADOG_API_KEY}@
    hostname: ${HOST_SID}
    enabledEnvironments: [prod, stage, dev]
    published: [ALL]

authConfiguration:
  api:
    enabled: ${API_AUTH_ENABLED:-true}
  host:
    enabled: ${HOST_AUTH_ENABLED:-true}
    views:
      admin:
        roles:
          - some-admin-role

clients:
  hello_message:
    clientName: flex-maestro-client
    clientVersion: 1.0
    metricsPrefix: flex-maestro
    hostSid: ${HOST_SID}
    circuitBreakerProperties:
      failuresBeforeReject: 200
      successesBeforeAllow: 5
      timeBeforeNextCheck: 20
    connectionProperties:
      requestTimeoutInMs: 3000
    endpoints:
      create_message:
        circuitBreakerProperties:
          failuresBeforeReject: 20
          successesBeforeAllow: 5
          timeBeforeNextCheck: 20
        connectionProperties:
          requestTimeoutInMs: 4000

rateLimitConfiguration:
  metricPrefix: flex-maestro
  cpsMonitor:
    # this configuration is suitable for local development/testing
    # for production, we should use distributed CPSMonitor
    # eg.
    #  cpsMonitor:
    #     type: cartographer
    #     role: flex-maestro-cps-monitor
    type: dns
    hostname: localhost

concurrencyLimit:
  enableConcurrencyRateLimit: true
  statusCode: 503
