/*
 * FlexMaestro Service
 * This is a basic FlexMaestro service, showcasing many features of a standard Twilio Service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: your-team-name@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.flexmaestro.server.api.admin;
import com.twilio.coreutil.service.jakarta.api.bundles.ConfiguredBundle;
import com.twilio.coreutil.service.jakarta.api.application.Bootstrap;
import com.twilio.coreutil.service.jakarta.api.application.Environment;
import com.twilio.ratelimit.bundle.config.RateLimitConfigurationStrategy;
/**
 * Bundle for registering AdminApi Jersey resources.
 */
public final class AdminApiResourceBundle<T> implements ConfiguredBundle<T> {
    private final AdminApi adminApiHandler;

    public AdminApiResourceBundle(final AdminApi adminApiHandler) {
        this.adminApiHandler = adminApiHandler;
    }

    @Override
    public void run(final T configuration, final Environment environment) {
        if (adminApiHandler != null) {
            environment.jersey().register(new AdminApiResource(adminApiHandler));
            if (configuration instanceof RateLimitConfigurationStrategy
                    && ((RateLimitConfigurationStrategy) configuration).getRateLimitConfiguration().getEnabled()) {
                environment.jersey().register(new AdminApiResource.AdminApiFilterFactory());
            }
        }
    }

    @Override
    public void initialize(final Bootstrap<?> bootstrap) {
    }
 }