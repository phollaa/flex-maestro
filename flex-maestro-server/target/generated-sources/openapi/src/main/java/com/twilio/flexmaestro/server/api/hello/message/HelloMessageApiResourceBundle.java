/*
 * FlexMaestro Service
 * This is a basic FlexMaestro service, showcasing many features of a standard Twilio Service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: your-team-name@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.flexmaestro.server.api.hello.message;
import com.twilio.coreutil.service.jakarta.api.bundles.ConfiguredBundle;
import com.twilio.coreutil.service.jakarta.api.application.Bootstrap;
import com.twilio.coreutil.service.jakarta.api.application.Environment;
import com.twilio.ratelimit.bundle.config.RateLimitConfigurationStrategy;
/**
 * Bundle for registering HelloMessageApi Jersey resources.
 */
public final class HelloMessageApiResourceBundle<T> implements ConfiguredBundle<T> {
    private final HelloMessageApi helloMessageApiHandler;

    public HelloMessageApiResourceBundle(final HelloMessageApi helloMessageApiHandler) {
        this.helloMessageApiHandler = helloMessageApiHandler;
    }

    @Override
    public void run(final T configuration, final Environment environment) {
        if (helloMessageApiHandler != null) {
            environment.jersey().register(new HelloMessageApiResource(helloMessageApiHandler));
            if (configuration instanceof RateLimitConfigurationStrategy
                    && ((RateLimitConfigurationStrategy) configuration).getRateLimitConfiguration().getEnabled()) {
                environment.jersey().register(new HelloMessageApiResource.HelloMessageApiFilterFactory());
            }
        }
    }

    @Override
    public void initialize(final Bootstrap<?> bootstrap) {
    }
 }